# Generated by Django 4.0 on 2022-01-01 17:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: volleyball, chess, line dancing', max_length=100, verbose_name='Group name')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Solo', 'Solo'), ('Team', 'Team')], max_length=4, verbose_name='Solo/Team League')),
                ('name', models.CharField(max_length=100, verbose_name='League name')),
                ('details', models.TextField(verbose_name='About the league')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='leagues', to='im.eventgroup', verbose_name='(Optional) League type')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='Instead of deleting organizations, switch active to false.')),
                ('name', models.CharField(help_text='Full organization name. Ex: The University of Texas at Austin', max_length=100)),
                ('short_name', models.CharField(help_text='Shortened organization name. Ex: UT Austin', max_length=100)),
                ('url_name', models.CharField(help_text='Link for your organization. Example input: ut_austin -> /org/ut_austin', max_length=15, unique=True, verbose_name='URL Name')),
                ('about_text', models.TextField(blank=True, null=True, verbose_name='About your organization')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: 2020-2021, Spring 2021, etc.', max_length=30)),
                ('start_date', models.DateField(help_text='Season start date')),
                ('end_date', models.DateField(help_text='Season end date')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(verbose_name='About')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='locations', to='im.organization')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Solo', 'Solo'), ('Team', 'Team')], max_length=4)),
                ('name', models.CharField(blank=True, help_text='Only required for teams', max_length=50, null=True, verbose_name='Team name')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='im.league')),
                ('users', models.ManyToManyField(related_name='leagues', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='league',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='leagues', to='im.location'),
        ),
        migrations.AddField(
            model_name='league',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='leagues', to='im.organization'),
        ),
        migrations.AddField(
            model_name='league',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='leagues', to='im.season'),
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Solo', 'Solo'), ('Team', 'Team')], max_length=4)),
                ('name', models.CharField(blank=True, help_text='Only required for teams', max_length=50, null=True, verbose_name='Team name')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='im.league')),
                ('users', models.ManyToManyField(related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='eventgroup',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='im.organization'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Solo', 'Solo'), ('Team', 'Team')], max_length=4, verbose_name='Solo/Team Event')),
                ('name', models.CharField(max_length=100, verbose_name='Event name')),
                ('details', models.TextField(verbose_name='About the event')),
                ('reg_start', models.DateTimeField(help_text='Time registration opens', verbose_name='Registration start')),
                ('reg_end', models.DateTimeField(help_text='Time registration closes', verbose_name='Registration end')),
                ('start', models.DateTimeField(help_text='Time event begins', verbose_name='Event start')),
                ('end', models.DateTimeField(help_text='Time event is expected to end', verbose_name='Event end')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='events', to='im.eventgroup', verbose_name='(Optional) Event type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='events', to='im.location')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='events', to='im.organization')),
            ],
        ),
    ]
